apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "snyk-monitor.name" . }}
  labels:
    app.kubernetes.io/name: {{ include "snyk-monitor.name" . }}
    helm.sh/chart: {{ include "snyk-monitor.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "snyk-monitor.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "snyk-monitor.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "snyk-monitor.name" . }}
      restartPolicy: Always
      containers:
        - name: {{ include "snyk-monitor.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - name: docker-config
            readOnly: true
            mountPath: "/srv/app/.docker"
          - name: temporary-storage
            mountPath: "/var/tmp"
          env:
          - name: SNYK_INTEGRATION_ID
            valueFrom:
              secretKeyRef:
                name: {{ .Values.monitorSecrets }}
                key: integrationId
          - name: SNYK_NAMESPACE
            value: {{ include "snyk-monitor.scope" . }}
          - name: SNYK_INTEGRATION_API
            value: {{ .Values.integrationApi }}
          - name: SNYK_CLUSTER_NAME
            value: {{ .Values.clusterName }}
          - name: SNYK_MONITOR_VERSION
            value: {{ .Values.image.tag }}
          - name: HOME
            value: /srv/app
          resources:
            requests:
              cpu: '250m'
              memory: '400Mi'
            limits:
              cpu: '1'
              memory: '2Gi'
          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
            privileged: false
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
      volumes:
        - name: docker-config
          secret:
            secretName: {{ .Values.monitorSecrets }}
            items:
              - key: dockercfg.json
                path: config.json
        - name: temporary-storage
          emptyDir:
            sizeLimit: {{ .Values.temporaryStorageSize }}
