#! /bin/bash
#
# Creates an Operator using Operator template files in this repository.
# The template files should have been previously generated by using the operator-sdk.
#
# By using the template files, this script copies over the Helm chart and makes some minor
# replacements to ensure the latest built snyk-monitor tag is used in the Operator.
#

set -e

SNYK_OPERATOR_IMAGE_NAME_AND_TAG="$1"
SNYK_MONITOR_IMAGE_TAG="$2"

PWD="$(pwd)"
OS_NAME="$(uname -s)"
OPERATOR_SDK_PATH=$([ "${OS_NAME}" == "Darwin" ] && echo "operator-sdk" || echo "${PWD}/operator-sdk") 
OPERATOR_LOCATION="${PWD}/snyk-kubernetes-operator"
OPERATOR_YAML_LOCATION="${OPERATOR_LOCATION}/deploy/operator.yaml"
OPERATOR_CR_LOCATION="${OPERATOR_LOCATION}/deploy/crds/charts.helm.k8s.io_v1alpha1_snykmonitor_cr.yaml"
HELM_CHART_LOCATION="${PWD}/snyk-monitor"
# The location of this Helm chart's copy must match what the Dockerfile of the Operator
HELM_CHART_COPY_LOCATION="${OPERATOR_LOCATION}/helm-charts"
HELM_CHART_COPY_VALUES_LOCATION="${HELM_CHART_COPY_LOCATION}/values.yaml"

# The end location should be helm-charts, as this is what the operator-sdk expects!
cp -r "${HELM_CHART_LOCATION}"/ "${HELM_CHART_COPY_LOCATION}"/

sed -i.bak "s|IMAGE_TAG_OVERRIDE_WHEN_PUBLISHING|${SNYK_MONITOR_IMAGE_TAG}|g" "${HELM_CHART_COPY_VALUES_LOCATION}"

cd "${OPERATOR_LOCATION}"

"${OPERATOR_SDK_PATH}" build "${SNYK_OPERATOR_IMAGE_NAME_AND_TAG}"

sed -i.bak "s|REPLACE_IMAGE|${SNYK_OPERATOR_IMAGE_NAME_AND_TAG}|g" "${OPERATOR_YAML_LOCATION}"
sed -i.bak "s|IMAGE_TAG_OVERRIDE_WHEN_PUBLISHING|${SNYK_MONITOR_IMAGE_TAG}|g" "${OPERATOR_CR_LOCATION}"

cd "${PWD}"
